// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BillingProvider.Core.Models;
//
//    var list = List.FromJson(jsonString);

namespace BillingProvider.Core.Models
{
    using System;
    using Newtonsoft.Json;

    public partial class List
    {
        [JsonProperty("Command", Required = Required.Always)]
        public string Command { get; set; }

        [JsonProperty("NumDevice", Required = Required.Always)]
        public long NumDevice { get; set; }

        [JsonProperty("InnKkm", Required = Required.Always)]
        public string InnKkm { get; set; }

        [JsonProperty("Active", Required = Required.AllowNull)]
        public bool? Active { get; set; }

        [JsonProperty("OnOff", Required = Required.AllowNull)]
        public bool? OnOff { get; set; }

        [JsonProperty("OFD_Error", Required = Required.AllowNull)]
        public bool? OfdError { get; set; }

        [JsonProperty("OFD_DateErrorDoc", Required = Required.AllowNull)]
        public DateTimeOffset? OfdDateErrorDoc { get; set; }

        [JsonProperty("FN_DateEnd", Required = Required.AllowNull)]
        public DateTimeOffset? FnDateEnd { get; set; }

        [JsonProperty("FN_MemOverflowl", Required = Required.AllowNull)]
        public bool? FnMemOverflowl { get; set; }

        [JsonProperty("FN_IsFiscal", Required = Required.AllowNull)]
        public bool? FnIsFiscal { get; set; }
    }

    public partial class List
    {
        public static List FromJson(string json) =>
            JsonConvert.DeserializeObject<List>(json, Converter.Settings);
    }
}