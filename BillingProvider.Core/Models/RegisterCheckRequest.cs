// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BillingProvider.Core.Models;
//
//    var registerCheck = RegisterCheck.FromJson(jsonString);

namespace BillingProvider.Core.Models
{
    using System.Collections.Generic;
    using Newtonsoft.Json;

    public partial class RegisterCheck
    {
        [JsonProperty("Command", Required = Required.Always)]
        public string Command { get; set; }

        [JsonProperty("NumDevice", Required = Required.Always)]
        public long NumDevice { get; set; }

        [JsonProperty("Timeout", Required = Required.Always)]
        public long Timeout { get; set; }

        [JsonProperty("IdCommand", Required = Required.Always)]
        public string IdCommand { get; set; }

        [JsonProperty("IsFiscalCheck", Required = Required.Always)]
        public bool IsFiscalCheck { get; set; }

        [JsonProperty("TypeCheck", Required = Required.Always)]
        public long TypeCheck { get; set; }

        [JsonProperty("NotPrint", Required = Required.Always)]
        public bool NotPrint { get; set; }

        [JsonProperty("NumberCopies", Required = Required.Always)]
        public long NumberCopies { get; set; }

        [JsonProperty("CashierName", Required = Required.Always)]
        public string CashierName { get; set; }

        [JsonProperty("CashierVATIN", Required = Required.Always)]
        public string CashierVatin { get; set; }

        [JsonProperty("ClientInfo", Required = Required.Always)]
        public string ClientInfo { get; set; }

        [JsonProperty("AdditionalProps", Required = Required.Always)]
        public List<AdditionalProp> AdditionalProps { get; set; }

        [JsonProperty("CheckStrings", Required = Required.Always)]
        public List<CheckString> CheckStrings { get; set; }

        [JsonProperty("ElectronicPayment", Required = Required.Always)]
        public long ElectronicPayment { get; set; }
    }

    public class AdditionalProp
    {
        [JsonProperty("Print", Required = Required.Always)]
        public bool Print { get; set; }

        [JsonProperty("PrintInHeader", Required = Required.Always)]
        public bool PrintInHeader { get; set; }

        [JsonProperty("NameProp", Required = Required.Always)]
        public string NameProp { get; set; }

        [JsonProperty("Prop", Required = Required.Always)]
        public string Prop { get; set; }
    }

    public class CheckString
    {
        [JsonProperty("Register", Required = Required.Always)]
        public Register Register { get; set; }
    }

    public class Register
    {
        [JsonProperty("Name", Required = Required.Always)]
        public string Name { get; set; }

        [JsonProperty("Quantity", Required = Required.Always)]
        public long Quantity { get; set; }

        [JsonProperty("Price", Required = Required.Always)]
        public long Price { get; set; }

        [JsonProperty("Tax", Required = Required.Always)]
        public long Tax { get; set; }

        [JsonProperty("Amount", Required = Required.Always)]
        public long Amount { get; set; }

        [JsonProperty("EAN13", Required = Required.Always)]
        public string Ean13 { get; set; }

        [JsonProperty("SignMethodCalculation", Required = Required.Always)]
        public long SignMethodCalculation { get; set; }

        [JsonProperty("SignCalculationObject", Required = Required.Always)]
        public long SignCalculationObject { get; set; }
    }

    public partial class RegisterCheck
    {
        public static RegisterCheck FromJson(string json) =>
            JsonConvert.DeserializeObject<RegisterCheck>(json, Converter.Settings);
    }
}